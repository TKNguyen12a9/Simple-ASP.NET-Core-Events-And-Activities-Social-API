{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/AttendeeProfile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/commentStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/layout/Navbar.tsx","features/activities/dashboard/ActivityFilter.tsx","features/Profiles/FollowButton.tsx","features/Profiles/ProfileCard.tsx","features/activities/dashboard/ActivityAttendeesList.tsx","features/activities/dashboard/ActivityItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/error/ValidationError.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/Loading.tsx","app/common/form/MyTextArea.tsx","app/common/options/categoryOptions.ts","app/common/form/MySelectInput.tsx","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityHeader.tsx","features/activities/details/ActivityInfo.tsx","features/activities/details/ActivityChat.tsx","features/activities/details/ActivitySidebar.tsx","features/activities/details/ActivityDetails.tsx","features/error/TestErrors.tsx","features/error/NotFound.tsx","features/error/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/Profiles/ProfileHeader.tsx","features/Profiles/ProfileEditForm.tsx","features/Profiles/ProfileAbout.tsx","features/Profiles/ProfileActivityItem.tsx","features/Profiles/ProfileActivities.tsx","features/Profiles/ProfileFollowings.tsx","app/common/photosUpload/PhotosWidgetDropzone.tsx","app/common/photosUpload/PhotoWidgetCropper.tsx","app/common/photosUpload/PhotosUploadWidget.tsx","features/Profiles/ProfilePhotos.tsx","features/Profiles/ProfileBody.tsx","features/Profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","console","log","error","status","toast","method","errors","hasOwnProperty","history","push","modelStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","currentUser","register","user","login","AttendeeProfiles","activitiesProfileList","getActivitiesProfileList","username","predicate","uploadPhoto","file","formData","FormData","append","updateMainPhoto","deletePhoto","updateProfile","updateFollowing","listFollowings","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","AttendeeProfile","displayName","image","ActivityStore","activityRegister","Map","selectedActivity","pagingParams","set","editMode","loading","loadingInitial","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","runInAction","loadActivity","getActivity","userStore","isGoing","attendees","some","x","isHost","hostUsername","host","find","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","anttendee","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","isLogout","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","err","getUser","setDisplayName","name","setImage","ProfileStore","attendeeProfile","followings","ActivitiesProfile","loadingProfile","updateLoading","loadingMainPhotoUpdate","profileUpdateLoading","loadingFollowings","loadingActivitiesProfile","activeTab","setActiveTab","getProfile","currProfile","loadActivitiesProfile","loadActivitiesProfile2","photo","photos","isMain","activityStore","followingsCount","profile","loadFollowings","CommentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","REACT_APP_CHAT_URL","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","timestamp","unshift","stopHubConnection","stop","clearComments","addComment","invoke","appLoaded","getItem","setItem","setApploaded","modal","open","openModal","content","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","inverted","fixed","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","positive","isLoggedIn","Menu","position","Image","avatar","spaced","Dropdown","pointing","text","DropdownMenu","DropdownItem","link","icon","onClick","size","vertical","width","marginTop","Header","attached","color","active","has","onChange","useEffect","Reveal","animated","Content","visible","Button","fluid","hidden","basic","e","preventDefault","handleFollow","followerText","Card","Link","Description","str","length","substr","truncate","bio","extra","Icon","atttendees","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","Segment","Group","Label","zIndex","left","top","ribbon","marginBottom","clearing","secondary","floated","groupedActivities","group","sub","ActivityListPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","totalpages","currentPage","Grid","Column","pageStart","loadMore","hasMore","initialLoad","ActivityFilter","Loader","MyTextInput","props","useField","field","meta","Form","Field","label","touched","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","marBottom","ValidationError","Message","i","formFieldsValidation","Yup","required","userName","validationSchema","isValid","dirty","HomePage","Container","Loading","Dimmer","MyTextArea","categoryOptions","MyTextSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","MyDateInput","selected","useParams","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","height","padding","verticalAlign","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","resetForm","onKeyPress","shiftKey","attendeesText","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","ModalContainer","Modal","onClose","Statistic","Divider","setEditMode","isCurrentUser","Tab","Pane","ProfileActivityItem","profileActivity","minheight","objectFit","Meta","panes","menuItem","pane","menu","onTabChange","activeIndex","handleChange","itemsPerRow","profileActivitiy","PhotosWidgetDropzone","setFiles","dropzoneStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotosUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","fuild","hoverale","currentTarget","handleSetMainPhoto","handleDeletePhoto","ProfileBody","menuPosition","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.dfd1af9d.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalpages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../../index\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport {\r\n  ActivityProfile,\r\n  AttendeeProfile,\r\n  Photo,\r\n} from \"../models/AttendeeProfile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { User, UserForm } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\n// state management: step 2\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\n// url is choosed based on development mode or production mode\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`; // sending up token with request\r\n  return config;\r\n});\r\n\r\n// using interceptor to handle api error responses\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n    // handle when response is pagination\r\n    const pagination = response.headers[\"pagination\"];\r\n\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      console.log(\"response with pagination\", response.data);\r\n      return response as AxiosResponse<PaginatedResult<any>>; // using type-safety\r\n    }\r\n    console.log(\"response: \", response);\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error?.response!;\r\n    // console.log(error?.response);\r\n    switch (status) {\r\n      case 400: {\r\n        // display toast only when data is string\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        // redirect to 404 page when get invalid id\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modelStateErrors: any[] = []; // or const modelStateErrors = [] as any\r\n\r\n          for (let key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modelStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modelStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      }\r\n      case 401: {\r\n        toast.error(\"unauthorised\");\r\n        break;\r\n      }\r\n      case 404: {\r\n        history.push(\"/not-found\");\r\n        break;\r\n      }\r\n      case 500: {\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// responses\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data; // make a generic response\r\n\r\n// requests\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\n// activities Controller\r\nconst Activities = {\r\n  list: (\r\n    params: URLSearchParams // included pagination\r\n  ) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(`/activities`, activity),\r\n\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\n// account Controller\r\nconst Account = {\r\n  currentUser: () => requests.get<User>(\"/account\"),\r\n  register: (user: UserForm) => requests.post<User>(\"/account/register\", user),\r\n  login: (user: UserForm) => requests.post<User>(\"/account/login\", user),\r\n};\r\n\r\nconst AttendeeProfiles = {\r\n  // testing solution\r\n  activitiesProfileList: (params: URLSearchParams) =>\r\n    axios.get<ActivityProfile[]>(\"/profiles\", { params }).then(responseBody),\r\n\r\n  getActivitiesProfileList: (username: string, predicate: string) =>\r\n    requests.get<ActivityProfile[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n\r\n  get: (username: string) =>\r\n    requests.get<AttendeeProfile>(`/profiles/${username}`),\r\n\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  updateMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n\r\n  deletePhoto: (id: string) => requests.del(`photos/${id}/`),\r\n\r\n  updateProfile: (updateProfile: Partial<AttendeeProfile>) =>\r\n    requests.put(`/profiles`, updateProfile),\r\n\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get(`/follow/${username}?predicate=${predicate}`),\r\n};\r\n\r\n// controllers go here\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  AttendeeProfiles,\r\n};\r\n\r\nexport default agent;\r\n","import { AttendeeProfile } from \"./AttendeeProfile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isHost: boolean;\r\n  isGoing: boolean;\r\n  host?: AttendeeProfile;\r\n  isCancelled: boolean;\r\n  attendees?: AttendeeProfile[];\r\n}\r\n\r\n// helper class: scaffoler new activity object from activityFormValues\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    // whenever object is marked as ?: optional => it must be checked\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { Activity } from \"./activity\";\r\nimport { User } from \"./user\";\r\n\r\nexport interface AttendeeProfile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  followersCount: number;\r\n  followingsCount: number;\r\n  following: boolean;\r\n  bio?: string;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class AttendeeProfile implements AttendeeProfile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface ActivityProfile {\r\n  id: string;\r\n  category: string;\r\n  title: string;\r\n  date: Date | null;\r\n}\r\n// export class ActivityProfile {\r\n//   id: string = \"\";\r\n//   category: string = \"\";\r\n//   title: string = \"\";\r\n//   date: Date | null = null;\r\n//   constructor(activityProfile: ActivityProfile) {\r\n//     this.id = activityProfile.id;\r\n//     this.category = activityProfile.category;\r\n//     this.title = activityProfile.title;\r\n//     this.date = activityProfile.date;\r\n//   }\r\n// }\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { AttendeeProfile } from \"../models/AttendeeProfile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegister = new Map<string, Activity>(); // using map to store activities instead of array\r\n  selectedActivity: Activity | undefined = undefined;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true); // activity predicate\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    // ???\r\n    // todo: read more about reaction\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      // reaction makes side effects\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegister.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  // do paging\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  // filter activities using predicate\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    // ??? helper\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      }\r\n      case \"isGoing\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      }\r\n      case \"isHosting\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"isHosting\", true);\r\n        break;\r\n      }\r\n      case \"startDate\": {\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams(); // todo: read more about URLSearchParams\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    // ???\r\n    // predicate of activity filters\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  // get list of activities sorted by date priority\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegister.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime() // notice !\r\n    );\r\n  }\r\n\r\n  // filter group of activitie based time\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        // const date = activity.date!.toISOString().split(\"T\")[0]\r\n        const date = format(activity.date!, \"dd MMM yyyy h:mm aa\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams); // response included pagination\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(\"error:\", error);\r\n      runInAction(() => this.setLoadingInitial(false));\r\n    }\r\n  };\r\n\r\n  // helper to set response of pagination from server to pagination of client\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  // loading specific activity\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        // for specific thing, runInAction() is needed!\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // set activity\r\n  private setActivity = (activity: Activity) => {\r\n    // verify roles of current loggin user\r\n    // host or guest\r\n\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (x) => x.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegister.set(activity.id, activity);\r\n  };\r\n\r\n  // get activity\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegister.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new AttendeeProfile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      // scaffoler new activity object from activityFormValues\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      // set as current activity\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegister.set(activity.id, updatedActivity as Activity); // as -> type assertion\r\n          this.selectedActivity = updatedActivity as Activity; // as -> type assertion\r\n        }\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegister.delete(id);\r\n        // handle loading filter button when delete\r\n        // if (this.selectedActivity?.id === id) this.cancelSelectedActivity()\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        // 1. user attends to activity while isGoing: true => cancel\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (x) => x.username !== user?.username\r\n            );\r\n        } else {\r\n          // 2. user attends to activity while isGoing: false => attends\r\n          const anttendee = new AttendeeProfile(user!);\r\n          this.selectedActivity?.attendees?.push(anttendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        // set activity\r\n        this.activityRegister.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    } finally {\r\n      //   runInAction(() => (this.loading = false));\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity!.isCancelled;\r\n        this.activityRegister.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  // clear previously selected activity\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  // update following status in activities list\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegister.forEach((activity) => {\r\n      activity.attendees?.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? (attendee.followersCount -= 1)\r\n            : (attendee.followersCount += 1);\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserForm } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\n// state management: step 1\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  isLogout: boolean = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserForm) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      //   this.user = user;\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal(); // close modal when login succeeded\r\n      console.log(user);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    this.isLogout = true;\r\n    try {\r\n      store.commonStore.setToken(null);\r\n      window.localStorage.removeItem(\"jwt\");\r\n      this.user = null;\r\n      this.isLogout = true;\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.currentUser();\r\n      runInAction(() => (this.user = user));\r\n      //   this.user = user;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserForm) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token); // set token for newly created user\r\n      this.user = user;\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal(); // close modal when login succeeded\r\n      console.log(user);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // helper set display name\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  // helper for setting image ->  profileStore\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport ActivityListPlaceholder from \"../../features/activities/dashboard/ActivityListPlaceholder\";\r\nimport agent from \"../api/agent\";\r\nimport {\r\n  ActivityProfile,\r\n  AttendeeProfile,\r\n  Photo,\r\n} from \"../models/AttendeeProfile\";\r\nimport { store } from \"./store\";\r\n\r\nexport class ProfileStore {\r\n  attendeeProfile: AttendeeProfile | null = null;\r\n  followings: AttendeeProfile[] = [];\r\n  predicate = new Map().set(\"all\", true); // activity predicate\r\n  ActivitiesProfile: ActivityProfile[] = [];\r\n  loadingProfile = false;\r\n  updateLoading = false;\r\n  loadingMainPhotoUpdate = false;\r\n  profileUpdateLoading = false;\r\n  loadingFollowings = false;\r\n  loadingActivitiesProfile = false;\r\n  activeTab = 0;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    // todo: read more about mobx reaction\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"followings\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n        // testing\r\n        this.predicate.keys();\r\n        this.loadActivitiesProfile();\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.attendeeProfile) {\r\n      return store.userStore.user.username === this.attendeeProfile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const currProfile = await agent.AttendeeProfiles.get(username);\r\n      runInAction(() => {\r\n        this.attendeeProfile = currProfile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams(); // todo: read more about URLSearchParams\r\n\r\n    this.predicate.forEach((value, key) => {\r\n      params.append(key, value);\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  // testing solution\r\n  setPredicate = (predicate: string, value: boolean | string) => {\r\n    // ??? helper\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"all\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\": {\r\n        this.predicate.delete(\"all\");\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      }\r\n      case \"pastActivities\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"pastActivities\", true);\r\n        break;\r\n      }\r\n      case \"futureActivities\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"futureActivities\", true);\r\n        break;\r\n      }\r\n      case \"hostingActivities\": {\r\n        resetPredicate();\r\n        this.predicate.set(\"hostingActivities\", true);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // testing solution\r\n  loadActivitiesProfile = async () => {\r\n    this.loadingActivitiesProfile = true;\r\n    try {\r\n      const result = await agent.AttendeeProfiles.activitiesProfileList(\r\n        this.axiosParams\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.ActivitiesProfile = result;\r\n        this.loadingActivitiesProfile = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loadingActivitiesProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadActivitiesProfile2 = async (username: string, predicate?: string) => {\r\n    this.loadingActivitiesProfile = true;\r\n    try {\r\n      const result = await agent.AttendeeProfiles.getActivitiesProfileList(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.ActivitiesProfile = result;\r\n        this.loadingActivitiesProfile = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loadingActivitiesProfile = false));\r\n    }\r\n  };\r\n\r\n  getActivitiesProfile() {\r\n    return this.ActivitiesProfile;\r\n  }\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.updateLoading = true;\r\n    try {\r\n      const response = await agent.AttendeeProfiles.uploadPhoto(file);\r\n      const photo = response?.data;\r\n      runInAction(() => {\r\n        if (this.attendeeProfile) {\r\n          this.attendeeProfile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            // use helper here\r\n            store.userStore.setImage(photo.url);\r\n            this.attendeeProfile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n\r\n      this.updateLoading = false;\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.updateLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateMainPhoto = async (photo: Photo) => {\r\n    this.loadingMainPhotoUpdate = true;\r\n    try {\r\n      await agent.AttendeeProfiles.updateMainPhoto(photo?.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.attendeeProfile && this.attendeeProfile.photos) {\r\n          // set current main photo to false\r\n          this.attendeeProfile.photos.find((x) => x.isMain)!.isMain = false;\r\n          // set updated photo to main photo\r\n          this.attendeeProfile.photos.find((x) => x.id === photo.id)!.isMain =\r\n            true;\r\n          // set url for main photo\r\n          this.attendeeProfile.image = photo.url;\r\n          this.loadingMainPhotoUpdate = false;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loadingMainPhotoUpdate = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  // note: notice Partial<...>\r\n  updateProfile = async (updateProfile: Partial<AttendeeProfile>) => {\r\n    this.profileUpdateLoading = true;\r\n    try {\r\n      await agent.AttendeeProfiles.updateProfile(updateProfile);\r\n      runInAction(() => {\r\n        // make sure current displayName is not similar with the newly update name\r\n        if (\r\n          updateProfile.displayName &&\r\n          updateProfile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(updateProfile.displayName);\r\n        }\r\n\r\n        this.attendeeProfile = {\r\n          ...this.attendeeProfile,\r\n          ...(updateProfile as AttendeeProfile), // as ... make Typescript happy\r\n        };\r\n      });\r\n\r\n      this.profileUpdateLoading = false;\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.profileUpdateLoading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loadingMainPhotoUpdate = true;\r\n    try {\r\n      await agent.AttendeeProfiles.deletePhoto(photo?.id);\r\n      if (this.attendeeProfile) {\r\n        // if (photo.isMain) {\r\n        //   this.attendeeProfile!.photos!.find((x) => x.isMain)!.isMain = false;\r\n        //   this.attendeeProfile.image = \"\";\r\n        // }\r\n        this.attendeeProfile.photos = this.attendeeProfile!.photos!.filter(\r\n          (x) => x.id !== photo.id\r\n        );\r\n        this.loadingMainPhotoUpdate = false;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loadingMainPhotoUpdate = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.updateLoading = true;\r\n    try {\r\n      await agent.AttendeeProfiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.attendeeProfile &&\r\n          this.attendeeProfile.username !== store.userStore.user?.username &&\r\n          this.attendeeProfile.username === username // handle anonymous user affect followers | following's count on profile\r\n        ) {\r\n          following\r\n            ? this.attendeeProfile.followersCount++\r\n            : this.attendeeProfile.followersCount--;\r\n          //   this.attendeeProfile.following = following;\r\n          this.attendeeProfile.following = !this.attendeeProfile.following;\r\n        }\r\n\r\n        // if currently in logged in user's profile\r\n        if (this.attendeeProfile?.username === store.userStore.user?.username) {\r\n          // followers case\r\n          if (this.activeTab === 3) {\r\n            following\r\n              ? this.attendeeProfile!.followersCount++\r\n              : this.attendeeProfile!.followersCount--;\r\n          } else {\r\n            following\r\n              ? this.attendeeProfile!.followingsCount++\r\n              : this.attendeeProfile!.followingsCount--;\r\n          }\r\n        }\r\n\r\n        this.followings?.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n\r\n        this.updateLoading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.updateLoading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      if (this.attendeeProfile) {\r\n        const listFollowings = await agent.AttendeeProfiles.listFollowings(\r\n          this.attendeeProfile!.username,\r\n          predicate\r\n        );\r\n        runInAction(() => {\r\n          this.followings = listFollowings as AttendeeProfile[];\r\n          this.loadingFollowings = false;\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\n// import * as signalR from \"@microsoft/signalr\";\r\n\r\n// import { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n          // handle negogiation with server\r\n          //   skipNegotiation: true,\r\n          //   transport: signalR.HttpTransportType.WebSockets,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .then(() => console.log(\"connection started.\"))\r\n        .catch((err) => console.log(\"Errror establishing connection\", err));\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            // convert Datetime from server to js DateTime\r\n            comment.timestamp = new Date(comment.timestamp);\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.timestamp = new Date(comment.timestamp);\r\n          this.comments.unshift(comment); // push most newly created comment to top\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((err) => console.log(\"Error stopping connection: \", err));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values); // SendComment must be matched exactly with the SendComment  method on ChatHub\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n}\r\n","import { useContext, createContext } from \"react\";\r\nimport CommonStore from \"../stores/commonStore\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport { ProfileStore } from \"./profileStore\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\n// state managegement:  step 3\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(), // attendeeProfile\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\n// app context\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  appLoaded: boolean = false;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    // mobx reaction\r\n    reaction(\r\n      () => this.token, // token as dependency\r\n      // render this when token changed\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    // store jwt token of current logged-in user in localStorage\r\n    if (token) window.localStorage.setItem(\"jwt\", token);\r\n    this.token = token;\r\n  };\r\n\r\n  setApploaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\n// helper to open login and register form modal\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport * as semanticUiReact from \"semantic-ui-react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Image,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { link } from \"fs\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function Navbar() {\r\n  const { userStore } = useStore();\r\n  const { user } = userStore;\r\n\r\n  return (\r\n    <semanticUiReact.Menu inverted fixed=\"top\">\r\n      <semanticUiReact.Container>\r\n        <semanticUiReact.Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </semanticUiReact.Menu.Item>\r\n        <semanticUiReact.Menu.Item\r\n          as={NavLink}\r\n          to=\"/activities\"\r\n          exact\r\n          name=\"Activities\"\r\n        />\r\n        <semanticUiReact.Menu.Item\r\n          as={NavLink}\r\n          to=\"/errors\"\r\n          exact\r\n          name=\"Errors\"\r\n        />\r\n        <semanticUiReact.Menu.Item>\r\n          <semanticUiReact.Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </semanticUiReact.Menu.Item>\r\n        {userStore.isLoggedIn && (\r\n          <Menu.Item position=\"right\">\r\n            <Image\r\n              src={user?.image || \"/assets/user.png\"}\r\n              alt=\"logo\"\r\n              avatar\r\n              spaced=\"right\"\r\n            />\r\n            <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  content=\"My Profile\"\r\n                  as={link}\r\n                  to={`/profiles/${user?.username}`}\r\n                  icon=\"user\"\r\n                  onClick={userStore.getUser}\r\n                />\r\n\r\n                {/* <Route path=\"/profiles/:username\" component={ProfilePage} /> */}\r\n                <DropdownItem\r\n                  content=\"Logout\"\r\n                  as={link}\r\n                  to=\"/\"\r\n                  onClick={userStore.logout}\r\n                  icon=\"power\"\r\n                />\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </semanticUiReact.Container>\r\n    </semanticUiReact.Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  console.log(predicate);\r\n\r\n  return (\r\n    <>\r\n      <Menu size=\"large\" vertical style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHosting\")}\r\n          onClick={() => setPredicate(\"isHosting\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { AttendeeProfile } from \"../../app/models/AttendeeProfile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: AttendeeProfile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n\r\n  const { updateFollowing, updateLoading } = profileStore;\r\n\r\n  useEffect(() => {\r\n    console.log(profile.following);\r\n  }, [profile.following]);\r\n\r\n  // disable button when user is themself\r\n  console.log(userStore.user?.username);\r\n  console.log(profile.username);\r\n  if (userStore.user?.username === profile.username) {\r\n    return null;\r\n  }\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  };\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          basic\r\n          fluid\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={updateLoading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { AttendeeProfile } from \"../../app/models/AttendeeProfile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Profile {\r\n  profile: AttendeeProfile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Profile) {\r\n  // handle bio is too long\r\n  const truncate = (str: string | undefined) => {\r\n    if (str) {\r\n      return str.length > 40 ? str.substr(0, 37) + \"...\" : str;\r\n    }\r\n  };\r\n\r\n  const followerText = profile.followersCount > 1 ? \"followers\" : \"follower\";\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || `assets/user.png`} />\r\n      <Card.Content>\r\n        <Card.Header>{profile?.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile?.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} {followerText}\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { AttendeeProfile } from \"../../../app/models/AttendeeProfile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileCard from \"../../Profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  atttendees: AttendeeProfile[];\r\n}\r\n\r\nexport default observer(function ActivityAttendeesList({ atttendees }: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 2,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {atttendees &&\r\n        atttendees.map((attendee) => (\r\n          <Popup\r\n            hoverable\r\n            key={attendee.username}\r\n            trigger={\r\n              <List.Item\r\n                key={attendee.username}\r\n                as={Link}\r\n                to={`/profiles/${attendee.username}`}\r\n              >\r\n                <Image\r\n                  size=\"mini\"\r\n                  style={attendee.following ? styles : null}\r\n                  circular\r\n                  bordered\r\n                  src={attendee.image || `/assets/user.png`}\r\n                />\r\n              </List.Item>\r\n            }\r\n          >\r\n            <Popup.Content>\r\n              <ProfileCard profile={attendee} />\r\n            </Popup.Content>\r\n          </Popup>\r\n        ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityAttendeesList from \"./ActivityAttendeesList\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityItem({ activity }: Props) {\r\n  //   const { activityStore } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      {activity.isCancelled && (\r\n        <Label\r\n          style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n          color=\"red\"\r\n          content=\"Cancelled\"\r\n          ribbon\r\n        />\r\n      )}\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 5 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src=\"/assets/user.png\"\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by\r\n                <Label as={Link} to={`/profiles/${activity.host?.username}`}>\r\n                  {activity.host?.displayName}\r\n                </Label>\r\n              </Item.Description>\r\n\r\n              {/* if current logged in user is HOST */}\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You're hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n\r\n              {/* if current logged in user is GUEST */}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"grey\">\r\n                    You're going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>\r\n          {/* using date-fns format() to handle date error */}\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        {/* activityAttendeesList component */}\r\n        <ActivityAttendeesList atttendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"blue\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityItem from \"./ActivityItem\";\r\n\r\nfunction ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityList);\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Button, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\n// todo: read more about placeholder in semantic-ui\r\n// helps increasing loading experience\r\nexport default function ActivityListPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilter\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListPlaceholder from \"./ActivityListPlaceholder\";\r\n\r\nfunction ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegister, pagination, setPagingParams } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  // handle pagination\r\n  const handleGetNextPage = () => {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // setting this === 0 with caused page render just one activity when cancel submit or edit\r\n    if (activityRegister.size <= 1) loadActivities();\r\n  }, [activityRegister.size, loadActivities]);\r\n\r\n  console.log(pagination?.totalpages, pagination?.currentPage);\r\n\r\n  // filter loading for app\r\n  //   if (activityStore.loadingInitial && !loadingNext)\r\n  // return <Loading content=\"Loading acitivites...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListPlaceholder />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={handleGetNextPage}\r\n              hasMore={\r\n                !loadingNext &&\r\n                !!pagination &&\r\n                pagination.currentPage < pagination.totalpages\r\n              }\r\n              initialLoad={false}\r\n            >\r\n              <ActivityList />\r\n            </InfiniteScroll>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n        {/* component */}\r\n        {/* {editMode && <ActivityForm />} */}\r\n      </Grid.Column>\r\n      {/* todo: take a look at Loader  */}\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDashboard); // need mobx's observer() to consumed data from context\r\n","import { useField } from \"formik\"\r\nimport React from \"react\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\n// custom reusable form field validation\r\ninterface Props {\r\n\tplaceholder?: string\r\n\ttype? : string \r\n\tname: string\r\n\tlabel?: string\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n\tconst [field, meta] = useField(props.name) // useField()\r\n\treturn (\r\n\t\t<Form.Field>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t)\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header, Label, Segment } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from \"../../app/stores/store\"\r\n\r\n\r\nexport default observer(function LoginForm() {\r\n   const { userStore } = useStore() // whenever use useStore, observer() is needed as well\r\n\r\n   return (\r\n      <Segment clearing>\r\n         <Formik\r\n            initialValues={{ email: \"\", password: \"\", error: null }}\r\n            // those are from Formik\r\n            onSubmit={(values, { setErrors }) => userStore.login(values).catch(err =>\r\n               setErrors({ error: \"Invalid email or password\" }))}\r\n         >\r\n            {/* those are from Formik as well */}\r\n            {({ handleSubmit, isSubmitting, errors }) => (\r\n               <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                  <Header as=\"h2\" content=\"Login\" textAlign=\"center\" color=\"teal\" />\r\n                  <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n                  <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                  <ErrorMessage\r\n                     name=\"error\"\r\n                     render={() => <Label basic color=\"red\" content={errors.error} style={{ marBottom: 10 }} />}\r\n                  />\r\n                  <Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </Segment>\r\n   )\r\n})","import React from \"react\"\r\nimport { Message } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n\t// errors: string[] | null | undefined\r\n\terrors: any\r\n}\r\n\r\nexport default function ValidationError({ errors }: Props) {\r\n\treturn (\r\n\t\t<Message error>\r\n\t\t\t{errors && (\r\n\t\t\t\t<Message.List>\r\n\t\t\t\t\t{errors.map((err: any, i: any) => (\r\n                  <Message.Item key={i}>{err}</Message.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Message.List>\r\n\t\t\t)}\r\n\t\t</Message>\r\n\t)\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Button, Header,  Segment } from 'semantic-ui-react'\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from \"../../app/stores/store\"\r\nimport * as Yup from 'yup'\r\nimport ValidationError from '../error/ValidationError'\r\n\r\nexport default observer(function RegisterForm() {\r\n   const { userStore } = useStore() // whenever use useStore, observer() is needed as well\r\n\r\n   // form fields validated schema   \r\n\tconst formFieldsValidation = Yup.object({\r\n\t\tdisplayName: Yup.string().required(),\r\n\t\tuserName: Yup.string().required(),\r\n\t\temail: Yup.string().required().email(),\r\n\t\tpassword: Yup.string().required(),\r\n\t})\r\n\r\n   return (\r\n      <Segment clearing>\r\n         <Formik\r\n            initialValues={{ displayName: \"\", userName: \"\", email: \"\", password: \"\", error: null }}\r\n            // those are from Formik\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error =>\r\n               setErrors({error}))}\r\n            validationSchema={formFieldsValidation}\r\n         >\r\n            {/* those are from Formik as well */}\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n               // in className `error` must be included, if not <ValidationError /> will not be occured\r\n               <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n                  <Header as=\"h2\" content=\"Register\" textAlign=\"center\" color=\"teal\" />\r\n                  <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n                  <MyTextInput name=\"userName\" placeholder=\"User Name\" />\r\n                  <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n                  <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                  <ErrorMessage\r\n                     name=\"error\"\r\n                     render={() => <ValidationError errors={errors.error} />} // validationError goes here \r\n                  />\r\n                  <Button\r\n                     disabled={!isValid || !dirty || isSubmitting}\r\n                     loading={isSubmitting} positive\r\n                     content=\"Submit\"\r\n                     type=\"submit\" fluid />\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </Segment>\r\n   )\r\n})","import React from \"react\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        <Header as=\"h2\" inverted content=\"Welcome to Reactivities\"></Header>\r\n        {userStore.isLoggedIn ? (\r\n          <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n            Go to activities\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              size=\"huge\"\r\n              inverted\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              size=\"huge\"\r\n              inverted\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n            >\r\n              Register\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { Dimmer, Loader } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n\tinverted?: boolean\r\n\tcontent?: string\r\n}\r\n\r\nexport default function Loading({\r\n\tinverted = true,\r\n\tcontent = \"Loading...\",\r\n}: Props) {\r\n\treturn (\r\n\t\t<Dimmer active={true} inverted={inverted}>\r\n\t\t\t<Loader content={content} />\r\n\t\t</Dimmer>\r\n\t)\r\n}\r\n","import { useField } from \"formik\"\r\nimport React from \"react\"\r\nimport { Form, Label } from \"semantic-ui-react\"\r\n\r\n// custom reusable form field validation\r\ninterface Props {\r\n\tplaceholder: string\r\n\trows: number\r\n\tname: string\r\n\tlabel?: string\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n\tconst [field, meta] = useField(props.name) // useField()\r\n\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<textarea {...field} {...props} />\r\n\t\t\t{/* error label */}\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t)\r\n}\r\n","export const categoryOptions: { text: string; value: string }[] = [\r\n\t{ text: \"Drinks\", value: \"Drinks\" },\r\n\t{ text: \"Culture\", value: \"Culture\" },\r\n\t{ text: \"Sport\", value: \"Sport\" },\r\n\t{ text: \"Food\", value: \"Food\" },\r\n\t{ text: \"Film\", value: \"Film\" },\r\n\t{ text: \"Travel\", value: \"Travel\" },\r\n]\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\n// custom reusable form field validation\r\ninterface Props {\r\n  placeholder: string;\r\n  options: any;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextSelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name); // useField()\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        placeholder={props.placeholder}\r\n        onChange={(e, d) => helpers.setValue(d.value)} // onChange\r\n        onBlur={() => helpers.setTouched(true)} // use onBlur effect\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: ReactDatePickerProps) {\r\n  const [field, meta, helpers] = useField(props.name); // need to read more about useField()\r\n\r\n  return (\r\n    <Form.Field>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../../app/layout/Loading\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik, Form } from \"formik\"; // using Formik\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nfunction ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const { updateActivity, createActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  // refer this: https://stackoverflow.com/questions/63660520/typescript-error-after-upgrading-version-4-useparams-from-react-router-dom-pr\r\n  const { id } = useParams<{ id: string }>(); // need to specify type of param(e.g: id: string)\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`); // useHistory\r\n      });\r\n    } else {\r\n      updateActivity(activity).then(() => {\r\n        history.push(`/activities/${activity.id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  // function handleInputChange(\r\n  // \tevent: ChangeEvent<HTMLInputElement | HTMLTextAreaElement> // handle multiple function type (input text, textArea)\r\n  // ) {\r\n  // \tconst { name, value } = event.target\r\n  // \tsetActivity({ ...activity, [name]: value }) // value={activity.title}\r\n  // }\r\n\r\n  // form validation schema using Yup\r\n  const formFieldsValidation = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity title is required\"),\r\n    category: Yup.string().required(\"The activity title is required\"),\r\n    date: Yup.string().required(\"The activity title is required\").nullable(),\r\n    venue: Yup.string().required(\"The activity title is required\"),\r\n  });\r\n\r\n  if (loadingInitial) return <Loading content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={formFieldsValidation} // form validation schema\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} name=\"description\" placeholder=\"Description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              name=\"category\"\r\n              placeholder=\"Category\"\r\n            />\r\n            <MyDateInput\r\n              // those attributes are from datePicker!\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput name=\"city\" placeholder=\"City\" />\r\n            <MyTextInput name=\"venue\" placeholder=\"Venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !isValid || !dirty}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              loading={isSubmitting}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityForm);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\"; // format date time\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {/* filter display after activity is cancelled */}\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            ribbon\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                {/* using format() */}\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.displayName}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} color=\"purple\" onClick={updateAttendance}>\r\n            Cancel activity\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled} // can not join when activity is cancelled\r\n            loading={loading}\r\n            color=\"teal\"\r\n            floated=\"left\"\r\n            onClick={updateAttendance}\r\n          >\r\n            Join activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentStore from \"../../../app/stores/commentStore\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { formatDistanceToNow } from \"date-fns\"; // format date time\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityChat({ activityId }: Props) {\r\n  const {\r\n    commentStore: { comments, createHubConnection, clearComments, addComment },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      createHubConnection(activityId);\r\n    }\r\n    // todo: read more about cleanup function\r\n    return () => {\r\n      clearComments();\r\n    };\r\n  }, [activityId, CommentStore]); // note: pay attention here\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <Comment.Group>\r\n          {comments &&\r\n            comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || `/assets/user.png`} />\r\n                <Comment.Content>\r\n                  <Comment.Author\r\n                    as={Link}\r\n                    to={`/profiles/${comment.username}`}\r\n                  >\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistanceToNow(comment.timestamp)} ago</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                    {comment.body}\r\n                  </Comment.Text>\r\n                  {/* <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                  </Comment.Actions> */}\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n\r\n          <Formik\r\n            onSubmit={(values, { resetForm }) =>\r\n              addComment(values).then(() => resetForm())\r\n            }\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required(),\r\n            })}\r\n          >\r\n            {({ isSubmitting, isValid, handleSubmit }) => (\r\n              <Form className=\"ui form\">\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        rows={2}\r\n                        placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line.)\"\r\n                        {...props.field}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === \"Enter\" && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key === \"Enter\" && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivitySidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  // handle warning attendees is posisbly null\r\n  if (!attendees) return null;\r\n\r\n  let attendeesText = attendees.length > 1 ? \"people\" : \"person\";\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees!.length} {attendeesText} going!\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees &&\r\n            attendees.map((attendee) => (\r\n              <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n                {attendee.username === host?.username && (\r\n                  <Label\r\n                    style={{ position: \"absolute\" }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                  >\r\n                    Host\r\n                  </Label>\r\n                )}\r\n                <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n                <Item.Content verticalAlign=\"middle\">\r\n                  <Item.Header as=\"h3\">\r\n                    <Link to={`/profiles/${attendee.username}`}>\r\n                      {attendee.displayName}\r\n                    </Link>\r\n                  </Item.Header>\r\n                  {attendee.following && (\r\n                    <Item.Extra style={{ color: \"orange\" }}>\r\n                      following\r\n                    </Item.Extra>\r\n                  )}\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport Loading from \"../../../app/layout/Loading\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityHeader from \"./ActivityHeader\";\r\nimport ActivityInfo from \"./ActivityInfo\";\r\nimport ActivityChat from \"./ActivityChat\";\r\nimport ActivitySidebar from \"./ActivitySidebar\";\r\n\r\nexport default observer(function ActivityDetails({}) {\r\n  const { activityStore } = useStore();\r\n  const { id } = useParams<{ id: string }>(); // useParams\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  //  !activity: handling `object possibly be undefined` from TS\r\n  if (loadingInitial || !activity) return <Loading />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityHeader activity={activity} />\r\n        <ActivityInfo activity={activity} />\r\n        <ActivityChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivitySidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationError from \"./ValidationError\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  //   const baseUrl = \"http://localhost:5000/api/\";\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationError errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function NotFound() {\r\n\treturn (\r\n\t\t<Segment placeholder>\r\n\t\t\t<Header icon>\r\n\t\t\t\t<Icon name=\"search\" />\r\n\t\t\t\tOpps-we've loooked everywhere and could not found this :(\r\n\t\t\t</Header>\r\n\t\t\t<Segment.Inline>\r\n\t\t\t\t<Button as={Link} to=\"/activities\" primary>\r\n\t\t\t\t\tReturn to activities page\r\n\t\t\t\t</Button>\r\n\t\t\t</Segment.Inline>\r\n\t\t</Segment>\r\n\t)\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport { Container, Header, Segment } from \"semantic-ui-react\"\r\nimport { useStore } from \"../../app/stores/store\"\r\n\r\n// component does consume data from useStore => observer() is needed!\r\nexport default observer(function ServerError() {\r\n\tconst { commonStore } = useStore()\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header as=\"h1\" content=\"Server error\" />\r\n\t\t\t<Header as=\"h5\" color=\"red\" sub content={commonStore.error?.message} />\r\n\t\t\t{commonStore.error?.details && (\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n\t\t\t\t\t<code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t)\r\n})\r\n","import React from 'react'\r\nimport { Modal } from 'semantic-ui-react'\r\nimport { useStore } from '../../stores/store'\r\n\r\n\r\nexport default function ModalContainer() {\r\n   const {modalStore} = useStore()   \r\n\r\n   return (\r\n      <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n         <Modal.Content>\r\n            {modalStore.modal.body}\r\n         </Modal.Content>\r\n      </Modal>\r\n   )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { AttendeeProfile } from \"../../app/models/AttendeeProfile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: AttendeeProfile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  console.log(profile.followingsCount);\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile?.image || `/assets/user.png`}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile?.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Followings\" value={profile.followingsCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Formik, Form } from \"formik\"; // using Formik\r\nimport * as Yup from \"yup\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n/*To format a selection: Ctrl + K, Ctrl + F\r\nTo format a document: Ctrl + K, Ctrl + D*/\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { updateProfile, attendeeProfile },\r\n  } = useStore();\r\n\r\n  const formFieldsValidation = Yup.object({\r\n    displayName: Yup.string().required(\"The profile display name is required.\"),\r\n  });\r\n\r\n  // this is reusable form\r\n  return (\r\n    <Formik\r\n      validationSchema={formFieldsValidation}\r\n      enableReinitialize\r\n      initialValues={{\r\n        displayName: attendeeProfile?.displayName,\r\n        bio: attendeeProfile?.bio,\r\n      }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => setEditMode(false));\r\n      }}\r\n    >\r\n      {({ isValid, isSubmitting, dirty }) => (\r\n        <Form className=\"ui form\" autoComplete=\"off\">\r\n          <MyTextInput name=\"displayName\" placeholder=\"Username\" />\r\n          <MyTextArea rows={4} name=\"bio\" placeholder=\"Add your bio\" />\r\n          <Button\r\n            disabled={!isValid || !dirty}\r\n            loading={isSubmitting}\r\n            floated=\"right\"\r\n            positive\r\n            type=\"submit\"\r\n            content=\"Update profile\"\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n    // <Tab.Pane>\r\n    //   <Grid>\r\n    //     <Grid.Column width={16}>\r\n    //       <Header\r\n    //         icon=\"user\"\r\n    //         floated=\"left\"\r\n    //         content={profile?.displayName || \"Username\"}\r\n    //       />\r\n    //       {isCurrentUser && (\r\n    //         <Button\r\n    //           floated=\"right\"\r\n    //           content={editMode ? \"Cancel\" : \"Edit profile\"}\r\n    //           onClick={() => setEditMode(!editMode)}\r\n    //         />\r\n    //       )}\r\n    //     </Grid.Column>\r\n    //     <Grid.Column width={16}>\r\n    //       {editMode && (\r\n    //         <Formik\r\n    //           validationSchema={formFieldsValidation} // form validation schema\r\n    //           enableReinitialize\r\n    //           initialValues={profile}\r\n    //           onSubmit={(values) => handleEditProfile(values)}\r\n    //         >\r\n    //           {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n    //             <Form\r\n    //               className=\"ui form\"\r\n    //               onSubmit={handleSubmit}\r\n    //               autoComplete=\"off\"\r\n    //             >\r\n    //               <MyTextInput name=\"displayName\" placeholder=\"Username\" />\r\n    //               <MyTextArea rows={4} name=\"bio\" placeholder=\"Add your bio\" />\r\n    //               <Button\r\n    //                 disabled={isSubmitting || !isValid || !dirty}\r\n    //                 floated=\"right\"\r\n    //                 positive\r\n    //                 type=\"submit\"\r\n    //                 content=\"Submit\"\r\n    //               />\r\n    //             </Form>\r\n    //           )}\r\n    //         </Formik>\r\n    //       )}\r\n    //     </Grid.Column>\r\n    //   </Grid>\r\n    // </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\n// interface Props {\r\n//   profile: AttendeeProfile;\r\n// }\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, attendeeProfile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${attendeeProfile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>\r\n              {attendeeProfile?.bio}\r\n            </span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { ActivityProfile } from \"../../app/models/AttendeeProfile\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  profileActivity: ActivityProfile;\r\n}\r\n\r\nexport default function ProfileActivityItem({ profileActivity }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/activities/${profileActivity.id}`}>\r\n      <Image\r\n        src={`/assets/categoryImages/${profileActivity.category}.jpg`}\r\n        style={{ minheight: 100, objectFit: \"cover\" }}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header>{profileActivity.title}</Card.Header>\r\n        {/* <Card.Description>{profileActivity.title}</Card.Description> */}\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Card.Meta>\r\n          {format(new Date(profileActivity.date!), \"do LLL\")}\r\n        </Card.Meta>\r\n        <Icon name=\"clock\" />\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Card, Grid, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { ActivityProfile } from \"../../app/models/AttendeeProfile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivityItem from \"./ProfileActivityItem\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting Events\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const {\r\n    profileStore: {\r\n      attendeeProfile,\r\n      ActivitiesProfile,\r\n      loadingActivitiesProfile,\r\n      loadActivitiesProfile2,\r\n    },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (ActivitiesProfile.length <= 1)\r\n      loadActivitiesProfile2(attendeeProfile!.username);\r\n    // loadActivitiesProfile2(attendeeProfile!.username);\r\n  }, [loadActivitiesProfile2, attendeeProfile]);\r\n\r\n  // handle custom tab change\r\n  const handleChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadActivitiesProfile2(\r\n      attendeeProfile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivitiesProfile}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {ActivitiesProfile.map((profileActivitiy: ActivityProfile) => (\r\n              <ProfileActivityItem\r\n                profileActivity={profileActivitiy}\r\n                key={profileActivitiy.id}\r\n              />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { attendeeProfile, followings, loadingFollowings, activeTab } =\r\n    profileStore;\r\n\r\n  // no needed anymore!\r\n  //   useEffect(() => {\r\n  //     loadFollowings(\"followings\").then(() =>\r\n  //       console.log(\"all followings loaded.\")\r\n  //     );\r\n  //   }, [loadFollowings]);\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${attendeeProfile?.displayName}`\r\n                : `People ${attendeeProfile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {followings &&\r\n            followings.map((following) => (\r\n              <ProfileCard key={following.username} profile={following} />\r\n            ))}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n\r\n{\r\n  /* <Popup\r\n  hoverable\r\n  key={attendee.username}\r\n  trigger={\r\n    <List.Item\r\n      key={attendee.username}\r\n      as={Link}\r\n      to={`/profiles/${attendee.username}`}\r\n    >\r\n      <Image\r\n        size=\"mini\"\r\n        style={attendee.following ? styles : null}\r\n        circular\r\n        bordered\r\n        src={attendee.image || `/assets/user.png`}\r\n      />\r\n    </List.Item>\r\n  }\r\n>\r\n  <Popup.Content>\r\n    <ProfileCard profile={attendee} />\r\n  </Popup.Content>\r\n</Popup>; */\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\"; // photo dropzone\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotosWidgetDropzone({ setFiles }: Props) {\r\n  // photos dropZone styles\r\n  const dropzoneStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\", // as \"center\" to handle warning claims about incompatible type\r\n    height: 200,\r\n  };\r\n\r\n  const dropzoneActiveStyles = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  // note: set current selected image files\r\n  // and pass down as child property to PhotosUploadWidget\r\n  // todo: read more about useCallback()\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      console.log(acceptedFiles);\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file), // note: preview is important, set image url to preview\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive\r\n          ? { ...dropzoneStyles, ...dropzoneActiveStyles }\r\n          : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\"; // todo: read more about Cropper\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ imagePreview, setCropper, }: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\" // className of step-3\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotosWidgetDropzone from \"./PhotosWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\ninterface Props {\r\n  uploadPhoto: (file: Blob) => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport default function PhotosUploadWidget({ uploadPhoto, loading }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  // todo: ???\r\n  let onCrop = () => {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  };\r\n\r\n  // todo: ???\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n      console.log(\"photoUploadWidget render\");\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      {/* step 1 */}\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add photo\" />\r\n        <PhotosWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      {/* step 2 */}\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {/* display selected iamge into step-2 */}\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      {/* step 3 */}\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Review & upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2} floated=\"right\">\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotosUploadWidget from \"../../app/common/photosUpload/PhotosUploadWidget\";\r\nimport { AttendeeProfile, Photo } from \"../../app/models/AttendeeProfile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: AttendeeProfile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      updateLoading,\r\n      loadingMainPhotoUpdate,\r\n      updateMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  const handlePhotoUpload = (file: Blob) => {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  const handleSetMainPhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    updateMainPhoto(photo);\r\n  };\r\n\r\n  const handleDeletePhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo).then(() => console.log(\"deleted photo succesfully.\"));\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header icon=\"image\" content=\"Photos\" floated=\"left\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              content={addPhotoMode ? \"Cancel\" : \"Add photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotosUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={updateLoading} // problem here\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos &&\r\n                profile.photos.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url || `/assets/user.png`} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fuild widths={2}>\r\n                        <Button\r\n                          basic\r\n                          hoverale\r\n                          color=\"green\"\r\n                          content=\"main\"\r\n                          name={\"main\" + photo.id}\r\n                          disabled={photo.isMain}\r\n                          loading={\r\n                            target === \"main\" + photo.id &&\r\n                            loadingMainPhotoUpdate\r\n                          }\r\n                          onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                        />\r\n                        <Button\r\n                          basic\r\n                          color=\"red\"\r\n                          icon=\"trash\"\r\n                          name={photo.id}\r\n                          loading={\r\n                            target === photo.id && loadingMainPhotoUpdate\r\n                          }\r\n                          onClick={(e) => handleDeletePhoto(photo, e)}\r\n                          disabled={photo.isMain}\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { AttendeeProfile } from \"../../app/models/AttendeeProfile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ListProfileActivitiesEvents from \"./ListProfileActivitiesEvents\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\n// Ctrl+k+u or Ctrl+k+c to comment\r\n\r\ninterface Props {\r\n  profile: AttendeeProfile;\r\n}\r\n\r\nexport default function ProfileBody({ profile }: Props) {\r\n  const {\r\n    profileStore: { setActiveTab },\r\n  } = useStore();\r\n  //\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> }, // this component getting profile directly from store!\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)} // todo: read more about onTabChange\r\n    />\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport Loading from \"../../app/layout/Loading\";\r\nimport ProfileBody from \"./ProfileBody\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>(); // note: defined type of {username: string} is needed for useParams to understands\r\n  const { profileStore } = useStore();\r\n  const { getProfile, loadingProfile, attendeeProfile, setActiveTab } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    if (username) getProfile(username);\r\n    // return () => {\r\n    //   setActiveTab(0);\r\n    // };\r\n    return () => setActiveTab(0);\r\n  }, [getProfile, username]);\r\n\r\n  if (loadingProfile) return <Loading content=\"Profile is loading...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {attendeeProfile && (\r\n          <>\r\n            <ProfileHeader profile={attendeeProfile} />\r\n            <ProfileBody profile={attendeeProfile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useStore } from \"../stores/store\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  Redirect,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\n// private route to handle unauthorised visiting\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  useLocation,\n  Switch,\n} from \"react-router-dom\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport \"./styles.css\";\nimport TestErrors from \"../../features/error/TestErrors\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/error/NotFound\";\nimport ServerError from \"../../features/error/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport Loading from \"./Loading\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/Profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { userStore, commonStore, modalStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setApploaded());\n    } else {\n      commonStore.setApploaded();\n    }\n  }, [userStore, commonStore]);\n\n  if (!commonStore.appLoaded) return <Loading content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      {/* modal container  */}\n      {modalStore.modal.open && <ModalContainer />}\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container style={{ marginTop: \"7em\" }}>\n              {/* component */}\n              {/* parent routes must include exact keyword */}\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                {/* one component but 2 different routes: create new And update*/}\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                {/* <Route component={ModalContainer} /> */}\n                {/* all of routes that below `NotFound` component will not be rendered */}\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App); // observer(App) keep track of data inside App\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation<{ pathname: string }>();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport \"react-calendar/dist/Calendar.css\"; // need to import dependencies to use\nimport \"semantic-ui-css/semantic.min.css\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.min.css\"; // react-toastify\nimport \"react-datepicker/dist/react-datepicker.css\"; // react-datepicker\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      {/*  */}\n      <Router history={history}>\n        <ScrollToTop />\n        <App />\n      </Router>\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}